---
alwaysApply: false
description: Cursor Rules 系統概覽和使用指南
---

# Cursor Rules 系統概覽

這個 Cursor Rules 系統基於 [CLAUDE.md](mdc:CLAUDE.md) 的核心原則設計，提供了一套完整的開發指導框架。

## 規則檔案結構

### 核心原則類別

- **[core-principles.mdc](mdc:.cursor/rules/core-principles.mdc)** - 核心開發原則和思維方式
  - 系統性思維、長遠考慮、解決方案偏好
  - 適用於所有請求 (`alwaysApply: true`)

- **[communication-guidelines.mdc](mdc:.cursor/rules/communication-guidelines.mdc)** - 溝通指導原則
  - 語言規範（繁體中文）、思考方式、協作原則
  - 適用於所有請求 (`alwaysApply: true`)

### 開發流程類別

- **[tdd-workflow.mdc](mdc:.cursor/rules/tdd-workflow.mdc)** - TDD 工作流程和實踐指南
  - 四階段開發流程：理解分析 → 文件測試 → 撰寫程式碼 → 重構交付
  - 適用於所有請求 (`alwaysApply: true`)

### 程式碼品質類別

- **[coding-standards.mdc](mdc:.cursor/rules/coding-standards.mdc)** - 程式碼撰寫標準和規範
  - 註解規範、命名原則、重寫限制
  - 適用於程式碼檔案 (`globs: *.ts,*.tsx,*.js,*.jsx`)

- **[testing-requirements.mdc](mdc:.cursor/rules/testing-requirements.mdc)** - 測試要求和品質標準
  - 測試覆蓋要求、品質標準、執行流程
  - 適用於測試檔案 (`globs: *.test.ts,*.test.tsx,*.spec.ts,*.spec.tsx`)

## 使用方式

### 自動應用的規則

以下規則會自動應用於每個請求：

- 核心開發原則
- 溝通指導原則
- TDD 工作流程

### 特定檔案類型的規則

- 編輯程式碼檔案時，會自動應用程式碼撰寫標準
- 編輯測試檔案時，會自動應用測試要求和品質標準

### 手動引用規則

可以使用 `/fetch_rules` 命令來手動獲取特定規則的詳細內容。

## 與專案文件的整合

這些規則與以下專案文件密切整合：

- [CLAUDE.md](mdc:CLAUDE.md) - 原始核心原則文件
- [plan.md](mdc:plan.md) - 專案實作計畫
- [spec.md](mdc:spec.md) - 技術規格說明

## 規則維護

- 規則應該與 [CLAUDE.md](mdc:CLAUDE.md) 保持一致
- 當核心原則變更時，相關的規則檔案也應該更新
- 新的開發實踐應該透過更新相應的規則檔案來標準化
