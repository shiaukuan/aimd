---
description: Cursor Rules 系統概覽和使用指南
---

# Cursor Rules 系統概覽

## 規則架構

本專案的 Cursor Rules 分為以下幾個核心模組：

### 🎯 [核心原則](mdc:.cursor/rules/core-principles.mdc)

- 系統性思維和長遠考慮
- 繁體中文溝通規範
- 解決方案偏好（簡單 > 複雜）

### 💻 [程式碼標準](mdc:.cursor/rules/coding-standards.mdc)

- 適用於所有程式碼檔案
- 註解規範（ABOUTME: 開頭）
- 命名和變更限制

### 🧪 [測試要求](mdc:.cursor/rules/testing-requirements.mdc)

- 無例外的測試覆蓋政策
- 測試執行流程（pnpm test + pnpm test:e2e）
- 品質標準（全綠才通過）

### 🔄 [TDD 工作流程](mdc:.cursor/rules/tdd-workflow.mdc)

- Red-Green-Refactor 循環
- 測試驅動開發實踐
- 先寫測試再寫實作

### 💬 [溝通指導](mdc:.cursor/rules/communication-guidelines.mdc)

- 繁體中文優先
- 澄清優於假設
- 系統性思考方法

## 基礎文件

重要的專案文件：

- 開發指導原則：[CLAUDE.md](mdc:CLAUDE.md)
- 專案配置：[package.json](mdc:package.json)
- TypeScript 設定：[tsconfig.json](mdc:tsconfig.json)
- 測試配置：[vitest.config.ts](mdc:vitest.config.ts) 和 [playwright.config.ts](mdc:playwright.config.ts)

## 規則應用方式

- **alwaysApply: true** - 每次請求都會應用的核心規則
- **globs 模式** - 針對特定檔案類型的規則
- **description 觸發** - 需要時手動應用的專門規則

這個規則系統確保了：
✅ 一致的程式碼品質
✅ 完整的測試覆蓋
✅ 系統性的問題解決方法
✅ 有效的團隊協作
